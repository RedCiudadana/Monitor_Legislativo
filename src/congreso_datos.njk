---
permalink: "congreso_datos/index.html"
---

{% extends "src/base.njk" %}

{% block head %}
<title>Congreso en Datos | Monitor Legislativo</title>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

{% endblock %}

{% block content %}

<!-- Slider ============================================= -->
<!-- <section id="slider" class="bg-color">
    <div class="container">
        <div class="row d-flex py-6">
            <div class="col-lg-12 col-md-12 col-sm-12 d-flex align-self-center flex-column text-center py-6">
                <img src="/assets/img/monitor/01_ICONOS/ML-14.png" style="width: 150px; height: auto;" class="m-auto mb-2">
                <h2 class="mb-2 text-white" style="font-size:40px!important">Congreso en Datos</h2>
                <p class="text-white" style="font-size:20px!important; font-weight: 400;">
                    Lorem ipsum dolor sit amet, Lorem ipsum dolor sit amet, Lorem ipsum dolor sit amet, Lorem ipsum dolor sit amet
                </p>

            </div>
        </div>
    </div>
</section> -->
<!-- Cuadros ============================================= -->
<section class="px-2">
    <div class="container clearfix">
        <div class="row py-6">
            <!-- Columna para el campo de búsqueda -->
            <div class="col-lg-3 mb-4"
            style="
                position: sticky;
                top: 90px; 
                height: 100%; 
                overflow-y: auto; 
                background-color: #f8f9fa; 
                z-index: 10;
                padding: 10px; 
            "
            >
                <h1>Agrupar por Bloque</h1>
                
                <div id="bloquesFiltro" class="d-flex flex-wrap my-3">
                    <!-- Bloque buttons will be dynamically added here -->
                </div>
            </div>
            <!-- Contenedor de cuadros de diputados -->
            <div class="col-lg-9">
                <div class="row">
                    <div class="col-lg-12 mb-4">
                        <input type="text" id="buscadorDiputados" placeholder="Buscar diputado..." class="form-control">
                        <button type="button" id="clearSearch" class="btn btn-light position-absolute x_button">✕</button>
                    </div>
                </div>
                <div class="row" id="listaDiputados">
                    {% for diputado in collections.diputado %}
                        <div class="col-lg-3 my-2 cuadro-diputado">
                            <div class="cuadro_diputado">
                                <a href="{{diputado.url}}">
                                    <img src="{{diputado.data.diputado['ImagenGithub']}}" loading="lazy">
                                    <h1 class="nombre-diputado">{{diputado.data.diputado['Nombre']}}</h1>
                                    <h6 class="bloque-diputado">{{diputado.data.diputado['Bloque al que representa']}}</h6>
                                </a>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
</section>

{% endblock %}

{% block body_javascripts %}
<script>
    const searchInput = document.getElementById('buscadorDiputados');
    const clearButton = document.getElementById('clearSearch');

    // Mostrar o esconder el botón de borrado según el input
    searchInput.addEventListener('input', function() {
        const searchValue = this.value.toLowerCase().trim();
        const cuadrosDiputados = document.querySelectorAll('.cuadro-diputado');

        // Mostrar el botón de borrado si hay texto
        clearButton.style.display = searchValue ? 'inline' : 'none';

        cuadrosDiputados.forEach(cuadro => {
            const nombreDiputado = cuadro.querySelector('.nombre-diputado').textContent.toLowerCase();
            if (searchValue && nombreDiputado.includes(searchValue)) {
                cuadro.style.display = 'block'; // Mostrar coincidencias
            } else if (searchValue === "") {
                cuadro.style.display = 'block'; // Mostrar todos si el input está vacío
            } else {
                cuadro.style.display = 'none'; // Ocultar los no coincidentes
            }
        });
    });

    // Borrar el contenido del input cuando se haga clic en la "X"
    clearButton.addEventListener('click', function() {
        searchInput.value = '';
        clearButton.style.display = 'none';
        
        // Mostrar todos los cuadros de diputados
        document.querySelectorAll('.cuadro-diputado').forEach(cuadro => {
            cuadro.style.display = 'block';
        });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const cuadrosDiputados = document.querySelectorAll(".cuadro-diputado");
        const bloqueCounts = {};
    
        // Contar las ocurrencias de cada bloque
        cuadrosDiputados.forEach(cuadro => {
            const bloque = cuadro.querySelector('.bloque-diputado').textContent.trim();
            if (bloque) {
                bloqueCounts[bloque] = (bloqueCounts[bloque] || 0) + 1;
            }
        });
    
        // Crear los botones de bloques con conteo
        const bloquesFiltroContainer = document.getElementById("bloquesFiltro");
        Object.keys(bloqueCounts).forEach(bloque => {
            const bloqueContainer = document.createElement("div");
            bloqueContainer.classList.add("bloque-container");
    
            // Crear un enlace para el bloque con el conteo
            const boton = document.createElement("a");
            boton.textContent = `${bloque} (${bloqueCounts[bloque]})`;
            boton.classList.add("bloque-boton");
            boton.addEventListener("click", () => filterDiputadosByBloque(bloque));
    
            // Agregar el enlace al contenedor de bloque
            bloqueContainer.appendChild(boton);

            // Agregar una línea debajo del bloque
            const hr = document.createElement("hr");
            bloqueContainer.appendChild(hr);
    
            // Añadir el contenedor al filtro de bloques
            bloquesFiltroContainer.appendChild(bloqueContainer);
        });
    
        // Botón para mostrar todos los diputados
        const botonMostrarTodos = document.createElement("a");
        botonMostrarTodos.textContent = "Mostrar Todos";
        botonMostrarTodos.classList.add("btn", "btn-light", "mx-2");
        botonMostrarTodos.addEventListener("click", () => {
            cuadrosDiputados.forEach(cuadro => {
                cuadro.style.display = 'block';
            });
        });
        bloquesFiltroContainer.appendChild(botonMostrarTodos);
    
        // Función para filtrar por bloque
        function filterDiputadosByBloque(bloque) {
            cuadrosDiputados.forEach(cuadro => {
                const partido = cuadro.querySelector('.bloque-diputado').textContent.trim();
                if (partido === bloque) {
                    cuadro.style.display = 'block';
                } else {
                    cuadro.style.display = 'none';
                }
            });
        }
    });
</script>
    
{% endblock %}